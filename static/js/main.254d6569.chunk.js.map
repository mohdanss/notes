{"version":3,"sources":["Footer.js","Header.js","InputArea.js","Note.js","App.js","index.js"],"names":["year","Date","getFullYear","Footer","react_default","a","createElement","className","Header","InputArea","props","_useState","useState","_useState2","Object","slicedToArray","isVisible","setIsVisible","_useState3","title","content","_useState4","note","setNote","handleChange","event","_event$target","target","name","value","prevValue","objectSpread","defineProperty","type","onChange","placeholder","onClick","rows","cols","length","addToNotes","Note","prop","noteHeading","noteMessage","removeNote","id","App","key","notes","setNotes","filter","src_Header","src_InputArea","newItem","newKey","at","newNote","prevNotes","concat","toConsumableArray","map","src_Note","Footer_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"yJAEMA,GAAO,IAAIC,MAAOC,cAEXC,EAAS,WACpB,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,gCAAsDP,ICChDQ,EAJA,WACb,OAAOJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,oBCyDME,EA1DG,SAACC,GAAU,IAAAC,EACOC,oBAAS,GADhBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACpBK,EADoBH,EAAA,GACTI,EADSJ,EAAA,GAAAK,EAEHN,mBAAS,CAC/BO,MAAO,GACPC,QAAS,KAJgBC,EAAAP,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEpBI,EAFoBD,EAAA,GAEdE,EAFcF,EAAA,GAOrBG,EAAe,SAACC,GAAU,IAAAC,EACND,EAAME,OAAtBC,EADsBF,EACtBE,KAAMC,EADgBH,EAChBG,MAEdN,EAAQ,SAACO,GAAD,OAAAhB,OAAAiB,EAAA,EAAAjB,CAAA,GAAqBgB,EAArBhB,OAAAkB,EAAA,EAAAlB,CAAA,GAAiCc,EAAOC,OAYlD,OACEzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SACE2B,KAAK,OACLL,KAAK,QACLC,MAAOP,EAAKH,MACZe,SAAUV,EACVW,YAAY,QACZ5B,UAAU,mBACV6B,QAdQ,WACdnB,GAAa,MAeRD,GACCZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,YACE2B,KAAK,OACLL,KAAK,UACLC,MAAOP,EAAKF,QACZc,SAAUV,EACVW,YAAY,iBACZ5B,UAAU,sBACV8B,KAAM,EACNC,KAAM,MAERlC,EAAAC,EAAAC,cAAA,UACEC,UAAU,YACV6B,QAAS,kBAlCnBb,EAAQ,CAAEJ,MAAO,GAAIC,QAAS,KACvBE,EAAKH,MAAMoB,OAAS,GAAKjB,EAAKF,QAAQmB,OAAS,GAiCZ7B,EAAM8B,WAAWlB,KAFnD,SC/BGmB,EAfF,SAACC,GACZ,OACEtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAWmC,EAAKC,aAC9BvC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWmC,EAAKE,aAC7BxC,EAAAC,EAAAC,cAAA,UACEC,UAAU,eACV6B,QAAS,kBAAKM,EAAKG,WAAWH,EAAKI,MAFrC,YCwCSC,EAzCH,WAAM,IAAApC,EACUC,mBAAS,CACjC,CACEoC,IAAK,EACL7B,MAAO,OACPC,QAAS,SALGP,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTsC,EADSpC,EAAA,GACFqC,EADErC,EAAA,GAiBVgC,EAAa,SAACC,GAClBI,EAASD,EAAME,OAAO,SAAC7B,GAAD,OAAUA,EAAK0B,MAAQF,MAG/C,OACE1C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8C,EAAD,MACAhD,EAAAC,EAAAC,cAAC+C,EAAD,CAAWb,WAfI,SAACc,GAClB,GAAIL,EAAMV,OAAS,EAAG,CACpB,IAAMgB,EAASN,EAAMO,GAAGP,EAAMV,OAAS,GAAGS,IACpCS,EAAO3C,OAAAiB,EAAA,EAAAjB,CAAA,GAAQwC,EAAR,CAAiBN,IAAKO,EAAS,IAC5CL,EAAS,SAACQ,GAAD,SAAAC,OAAA7C,OAAA8C,EAAA,EAAA9C,CAAmB4C,GAAnB,CAA8BD,WAClCP,EAAS,CAACpC,OAAAiB,EAAA,EAAAjB,CAAA,GAAKwC,EAAN,CAAeN,IAAK,SAWlC5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACZ0C,EAAMY,IAAI,SAACvC,GAAD,OACTlB,EAAAC,EAAAC,cAACwD,EAAD,CACElB,YAAatB,EAAKF,QAClB0B,GAAIxB,EAAK0B,IACTH,WAAYA,EACZF,YAAarB,EAAKH,MAClB6B,IAAK1B,EAAK0B,SAIhB5C,EAAAC,EAAAC,cAACyD,EAAD,QClCNC,IAASC,OAAO7D,EAAAC,EAAAC,cAAC4D,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.254d6569.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst year = new Date().getFullYear();\r\n\r\nexport const Footer = () => {\r\n  return <div className=\"footer\">Copyright All Right Reserved {year}</div>;\r\n};\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return <div className=\"header\">My Notes</div>;\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\n\r\nconst InputArea = (props) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [note, setNote] = useState({\r\n    title: \"\",\r\n    content: \"\",\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setNote((prevValue) => ({ ...prevValue, [name]: value }));\r\n  };\r\n\r\n  const handleInput = () => {\r\n    setNote({ title: \"\", content: \"\" });\r\n    return note.title.length > 1 && note.content.length > 1;\r\n  };\r\n\r\n  const showAll = () => {\r\n    setIsVisible(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"inputAreaContainer\">\r\n      <div className=\"inputArea\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={note.title}\r\n          onChange={handleChange}\r\n          placeholder=\"Title\"\r\n          className=\"inputBox titleip\"\r\n          onClick={showAll}\r\n        />\r\n        {isVisible && (\r\n          <div>\r\n            <textarea\r\n              type=\"text\"\r\n              name=\"content\"\r\n              value={note.content}\r\n              onChange={handleChange}\r\n              placeholder=\"Take a note...\"\r\n              className=\"inputBox noteBodyip\"\r\n              rows={2}\r\n              cols={100}\r\n            />\r\n            <button\r\n              className=\"addButton\"\r\n              onClick={() => handleInput() && props.addToNotes(note)}\r\n            >+</button>\r\n          </div>\r\n        )}\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputArea;\r\n","import React from \"react\";\r\n\r\nconst Note = (prop) => {\r\n  return (\r\n    <div className=\"note-container\">\r\n      <h1 className=\"heading\">{prop.noteHeading}</h1>\r\n      <p className=\"noteTxt\">{prop.noteMessage}</p>\r\n      <button\r\n        className=\"deleteButton\"\r\n        onClick={()=> prop.removeNote(prop.id)}\r\n      >\r\n        DELETE\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import React, { useState } from \"react\";\r\nimport { Footer } from \"./Footer\";\r\nimport Header from \"./Header\";\r\nimport InputArea from \"./InputArea\";\r\nimport Note from \"./Note\";\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([\r\n    {\r\n      key: 0,\r\n      title: \"Demo\",\r\n      content: \"...\",\r\n    },\r\n  ]);\r\n\r\n  const addToNotes = (newItem) => {\r\n    if (notes.length > 0) {\r\n      const newKey = notes.at(notes.length - 1).key;\r\n      const newNote = { ...newItem, key: newKey + 1 };\r\n      setNotes((prevNotes) => [...prevNotes, newNote]);\r\n    } else setNotes([{ ...newItem, key: 0 }]);\r\n  };\r\n\r\n  const removeNote = (id) => {\r\n    setNotes(notes.filter((note) => note.key !== id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <InputArea addToNotes={addToNotes} />\r\n      <div className=\"mainBody\">\r\n        {notes.map((note) => (\r\n          <Note\r\n            noteMessage={note.content}\r\n            id={note.key}\r\n            removeNote={removeNote}\r\n            noteHeading={note.title}\r\n            key={note.key}\r\n          />\r\n        ))}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n/**\n * param 1: what to show\n * param 2: where to show\n */\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}